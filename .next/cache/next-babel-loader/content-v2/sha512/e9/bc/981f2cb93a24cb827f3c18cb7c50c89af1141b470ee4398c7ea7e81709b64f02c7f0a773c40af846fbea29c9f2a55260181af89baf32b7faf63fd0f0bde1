{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Header from '../../components/Header';\nimport { TotalPagesContext } from '../../context/TotalPagesContext';\nimport { siteConfig } from '../../site.config.js';\n\nconst SlideshowPage = ({\n  totalSlidePages,\n  currentSlide,\n  filename\n}) => {\n  const MDXContent = dynamic(() => import(`../../${filename}`), {\n    loadableGenerated: {\n      webpack: () => [require.resolveWeak(`../../${filename}`)],\n      modules: [`../../${filename}`]\n    }\n  });\n  return /*#__PURE__*/_jsxs(TotalPagesContext.Provider, {\n    value: totalSlidePages,\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [siteConfig.name, \" - \", siteConfig.title]\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Poppins:wght@800&family=Roboto:ital,wght@0,400;0,700;1,400&display=swap\",\n        rel: \"stylesheet\"\n      })]\n    }), /*#__PURE__*/_jsx(Header, {\n      name: siteConfig.name,\n      title: siteConfig.title,\n      date: siteConfig.date,\n      url: siteConfig.author.url\n    }), /*#__PURE__*/_jsx(MDXContent, {})]\n  });\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  const filename = path.join('slides', `${params.slide}.mdx`);\n  const slidesDirectory = path.join(process.cwd(), 'slides');\n  const mdxFiles = fs.readdirSync(slidesDirectory);\n  const totalSlidePages = mdxFiles.length;\n  return {\n    props: {\n      totalSlidePages,\n      currentSlide: params.slide,\n      filename\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const postsDirectory = path.join(process.cwd(), 'slides');\n  const mdxFiles = fs.readdirSync(postsDirectory); // Loop through all post files and create array of slugs (to create links)\n\n  const paths = mdxFiles.map(filename => ({\n    params: {\n      slide: filename.replace('.mdx', '')\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default SlideshowPage;","map":null,"metadata":{},"sourceType":"module"}