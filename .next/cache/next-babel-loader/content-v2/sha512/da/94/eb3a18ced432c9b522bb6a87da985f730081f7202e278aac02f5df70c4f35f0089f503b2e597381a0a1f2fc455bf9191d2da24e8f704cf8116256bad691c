{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  :root {\\n    --bg: #050505;\\n    --meta: #888;\\n    --accent: rgb(0, 92, 221);\\n    --text: #FAFAFA;\\n    --base: 1.5rem;\\n    --code: 1rem;\\n    --heading-font-family: \\\"Poppins\\\";\\n    --heading-font-weight: 800;\\n  }\\n\\n  @media (max-width: 600px) {\\n    :root {\\n      --base: 1.2rem;\\n    }\\n  }\\n\\n  * {\\n    box-sizing: border-box;\\n  }\\n\\n  body,\\n  html {\\n    font-family: \\\"Roboto\\\", -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,\\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n    font-size: var(--base);\\n    -webkit-font-smoothing: antialiased;\\n    font-feature-settings: 'calt', 'liga', 'hist', 'onum', 'pnum';\\n\\n    overflow: auto;\\n\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n    padding: 0;\\n\\n    color: var(--text);\\n    background-color: var(--bg);\\n  }\\n\\n  #slide {\\n    display: flex;\\n    overflow: hidden;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: 100vw;\\n    height: 100vh;\\n    padding: 1rem;\\n\\n    text-align: center;\\n\\n    -webkit-overflow-scrolling: touch;\\n  }\\n\\n  #slide ul,\\n  #slide ol {\\n      text-align: left;\\n      margin-left: 32px;\\n  }\\n\\n  #slide ol {\\n    list-style: none;\\n    counter-reset: slide-ol-counter;\\n  }\\n\\n  #slide ol li {\\n    counter-increment: slide-ol-counter;\\n    margin-bottom:0.5em;\\n  }\\n\\n  #slide ol li::before {\\n    content: \\\"0\\\" counter(slide-ol-counter) \\\".\\\";\\n    font-weight: bold;\\n    font-size: 2rem;\\n    margin-right: 0.5rem;\\n    letter-spacing:1px;\\n    font-family: var(--heading-font-family);\\n    line-height: 1;\\n    position:relative;\\n    top:0.1em;\\n}\\n\\n  a {\\n    color: var(--text);\\n\\n    text-decoration-skip-ink: auto;\\n  }\\n\\n  blockquote {\\n    font-size: 120%;\\n    font-weight: bold;\\n\\n    width: 50vw;\\n\\n    text-align: left;\\n  }\\n\\n  @media (max-width: 900px) {\\n    blockquote {\\n      width: 90vw;\\n    }\\n  }\\n\\n  blockquote div::before {\\n    content: '\\\\201C';\\n  }\\n\\n  blockquote div::after {\\n    content: '\\\\201D';\\n  }\\n\\n  cite {\\n    font-size: 80%;\\n    font-weight: normal;\\n    font-style: normal;\\n\\n    display: block;\\n\\n    margin-top: 2rem;\\n  }\\n\\n  cite::before {\\n    content: '\\\\2014\\\\00a0';\\n  }\\n\\n  pre {\\n    font-size: 0.75em !important;\\n\\n    display: inline-block;\\n    overflow-x: scroll;\\n\\n    margin: 2rem 0;\\n\\n    text-align: left;\\n\\n    color: var(--accent);\\n  }\\n\\n  code {\\n    font-family: menlo, monospace;\\n  }\\n\\n  a:hover {\\n    color: var(--accent);\\n  }\\n\\n  h1 {\\n    font-family: var(--heading-font-family);\\n    font-weight: var(--heading-font-weight);\\n    font-size: 200%;\\n\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  h2 {\\n    font-family: var(--heading-font-family);\\n    font-weight: var(--heading-font-weight);\\n    font-size: 120%;\\n\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  p {\\n    margin-top: 1rem;\\n    margin-bottom: 1rem;\\n  }\\n\\n  header {\\n    font-size: 50%;\\n\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    width: 100%;\\n    padding: 20px;\\n\\n    user-select: none;\\n  }\\n\\n  header a,\\n  time {\\n    text-decoration: none;\\n\\n    color: var(--meta);\\n  }\\n\\n  header a:hover {\\n    color: var(--meta);\\n  }\\n\\n  header span {\\n    color: var(--text);\\n  }\\n\"], [\"\\n  :root {\\n    --bg: #050505;\\n    --meta: #888;\\n    --accent: rgb(0, 92, 221);\\n    --text: #FAFAFA;\\n    --base: 1.5rem;\\n    --code: 1rem;\\n    --heading-font-family: \\\"Poppins\\\";\\n    --heading-font-weight: 800;\\n  }\\n\\n  @media (max-width: 600px) {\\n    :root {\\n      --base: 1.2rem;\\n    }\\n  }\\n\\n  * {\\n    box-sizing: border-box;\\n  }\\n\\n  body,\\n  html {\\n    font-family: \\\"Roboto\\\", -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,\\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n    font-size: var(--base);\\n    -webkit-font-smoothing: antialiased;\\n    font-feature-settings: 'calt', 'liga', 'hist', 'onum', 'pnum';\\n\\n    overflow: auto;\\n\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n    padding: 0;\\n\\n    color: var(--text);\\n    background-color: var(--bg);\\n  }\\n\\n  #slide {\\n    display: flex;\\n    overflow: hidden;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: 100vw;\\n    height: 100vh;\\n    padding: 1rem;\\n\\n    text-align: center;\\n\\n    -webkit-overflow-scrolling: touch;\\n  }\\n\\n  #slide ul,\\n  #slide ol {\\n      text-align: left;\\n      margin-left: 32px;\\n  }\\n\\n  #slide ol {\\n    list-style: none;\\n    counter-reset: slide-ol-counter;\\n  }\\n\\n  #slide ol li {\\n    counter-increment: slide-ol-counter;\\n    margin-bottom:0.5em;\\n  }\\n\\n  #slide ol li::before {\\n    content: \\\"0\\\" counter(slide-ol-counter) \\\".\\\";\\n    font-weight: bold;\\n    font-size: 2rem;\\n    margin-right: 0.5rem;\\n    letter-spacing:1px;\\n    font-family: var(--heading-font-family);\\n    line-height: 1;\\n    position:relative;\\n    top:0.1em;\\n}\\n\\n  a {\\n    color: var(--text);\\n\\n    text-decoration-skip-ink: auto;\\n  }\\n\\n  blockquote {\\n    font-size: 120%;\\n    font-weight: bold;\\n\\n    width: 50vw;\\n\\n    text-align: left;\\n  }\\n\\n  @media (max-width: 900px) {\\n    blockquote {\\n      width: 90vw;\\n    }\\n  }\\n\\n  blockquote div::before {\\n    content: '\\\\\\\\201C';\\n  }\\n\\n  blockquote div::after {\\n    content: '\\\\\\\\201D';\\n  }\\n\\n  cite {\\n    font-size: 80%;\\n    font-weight: normal;\\n    font-style: normal;\\n\\n    display: block;\\n\\n    margin-top: 2rem;\\n  }\\n\\n  cite::before {\\n    content: '\\\\\\\\2014\\\\\\\\00a0';\\n  }\\n\\n  pre {\\n    font-size: 0.75em !important;\\n\\n    display: inline-block;\\n    overflow-x: scroll;\\n\\n    margin: 2rem 0;\\n\\n    text-align: left;\\n\\n    color: var(--accent);\\n  }\\n\\n  code {\\n    font-family: menlo, monospace;\\n  }\\n\\n  a:hover {\\n    color: var(--accent);\\n  }\\n\\n  h1 {\\n    font-family: var(--heading-font-family);\\n    font-weight: var(--heading-font-weight);\\n    font-size: 200%;\\n\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  h2 {\\n    font-family: var(--heading-font-family);\\n    font-weight: var(--heading-font-weight);\\n    font-size: 120%;\\n\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  p {\\n    margin-top: 1rem;\\n    margin-bottom: 1rem;\\n  }\\n\\n  header {\\n    font-size: 50%;\\n\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    width: 100%;\\n    padding: 20px;\\n\\n    user-select: none;\\n  }\\n\\n  header a,\\n  time {\\n    text-decoration: none;\\n\\n    color: var(--meta);\\n  }\\n\\n  header a:hover {\\n    color: var(--meta);\\n  }\\n\\n  header span {\\n    color: var(--text);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport { useRouter } from 'next/router';\nimport { createGlobalStyle } from 'styled-components';\nimport Slide from '../components/Slide';\nimport PresentationMode from '../components/PresentationMode';\nimport useEventListener from '../hooks/useEventListener';\nimport { useTotalPages } from '../context/TotalPagesContext';\nimport { useMode } from '../context/ModeContext';\nimport { useCurrentSlide } from '../context/CurrentSlideContext';\nimport { Storage } from '../hooks/useStorage';\nimport { MODES } from '../constants/modes';\nvar GlobalStyle = createGlobalStyle(_templateObject());\n\nvar SlidePage = function SlidePage(_ref) {\n  var children = _ref.children;\n\n  var _useCurrentSlide = useCurrentSlide(),\n      currentSlide = _useCurrentSlide.currentSlide,\n      setSlide = _useCurrentSlide.setSlide;\n\n  var router = useRouter();\n  var totalPages = useTotalPages();\n\n  var _useMode = useMode(),\n      mode = _useMode.mode,\n      setMode = _useMode.setMode;\n\n  var NEXT = [13, 32, 39];\n  var PREV = 37;\n  var PRESENTER = 80;\n  var slideCount = 0;\n\n  var navigate = function navigate(_ref2) {\n    var keyCode = _ref2.keyCode,\n        altKey = _ref2.altKey;\n\n    // Handle Presentation Mode shortcut\n    if (altKey) {\n      if (keyCode === PRESENTER) {\n        if (mode === MODES.SPEAKER) {\n          setMode(MODES.SLIDESHOW);\n          router.push(router.pathname, \"/slides/\".concat(router.query.slide, \"?mode=\").concat(MODES.SLIDESHOW, \"#\").concat(currentSlide), {\n            shallow: true\n          });\n        } else {\n          setMode(MODES.SPEAKER);\n          router.push(router.pathname, \"/slides/\".concat(router.query.slide, \"?mode=\").concat(MODES.SPEAKER, \"#\").concat(currentSlide), {\n            shallow: true\n          });\n        }\n\n        return false;\n      }\n    } // Handle Previous page\n\n\n    if (keyCode === PREV && currentSlide === 0) {\n      if (router.query && router.query.slide) {\n        if (router.query.slide > 1) {\n          router.push(\"/slides/\".concat(parseInt(router.query.slide, 10) - 1, \"?mode=\").concat(mode, \"#999\"));\n        }\n      }\n\n      return false;\n    } // Handle next page\n\n\n    if (NEXT.indexOf(keyCode) !== -1 && currentSlide === slideCount) {\n      if (router.query && router.query.slide) {\n        // Check for max page count\n        if (router.query.slide < totalPages) {\n          router.push(\"/slides/\".concat(parseInt(router.query.slide, 10) + 1, \"?mode=\").concat(mode));\n        }\n      }\n\n      return false;\n    } // Handle slide changes\n\n\n    if (NEXT.indexOf(keyCode) !== -1) {\n      setSlide(function (prevState) {\n        router.push(\"\".concat(router.pathname), \"/slides/\".concat(router.query.slide, \"?mode=\").concat(mode, \"#\").concat(prevState + 1));\n        return prevState + 1;\n      });\n    } else if (keyCode === PREV) {\n      setSlide(function (prevState) {\n        router.push(\"\".concat(router.pathname), \"/slides/\".concat(router.query.slide, \"?mode=\").concat(mode, \"#\").concat(prevState - 1));\n        return prevState - 1;\n      });\n    }\n  };\n\n  useEventListener('keydown', navigate);\n\n  var swipeLeft = function swipeLeft() {\n    navigate({\n      keyCode: NEXT[0]\n    });\n  };\n\n  var swipeRight = function swipeRight() {\n    navigate({\n      keyCode: PREV\n    });\n  };\n\n  var slideNotes = function slideNotes() {\n    var generatorCount = 0;\n    var generatedNotes = []; // Filter down children by only Slides\n\n    React.Children.map(children, function (child) {\n      // Check for <hr> element to separate slides\n      var childType = child && child.props && (child.props.mdxType || []);\n\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1;\n        return;\n      } // Check if it's a SpeakerNotes component\n\n\n      if (childType && childType.includes('SpeakerNotes')) {\n        if (!Array.isArray(generatedNotes[generatorCount])) {\n          generatedNotes[generatorCount] = [];\n        }\n\n        generatedNotes[generatorCount].push(child);\n      }\n    });\n    return generatedNotes;\n  };\n\n  var renderSlide = function renderSlide() {\n    var generatedSlides = [];\n    var generatorCount = 0; // Filter down children by only Slides\n\n    React.Children.map(children, function (child) {\n      // Check for <hr> element to separate slides\n      var childType = child && child.props && (child.props.mdxType || []);\n\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1;\n        return;\n      } // Check if it's a SpeakerNotes component\n\n\n      if (childType && !childType.includes('SpeakerNotes')) {\n        // Add slide content to current generated slide\n        if (!Array.isArray(generatedSlides[generatorCount])) {\n          generatedSlides[generatorCount] = [];\n        }\n\n        generatedSlides[generatorCount].push(child);\n      }\n    }); // Get total slide count\n\n    slideCount = generatorCount; // Return current slide\n\n    if (currentSlide === 999) {\n      router.push(router.pathname, \"/slides/\".concat(router.query.slide, \"?mode=\").concat(mode, \"#\").concat(slideCount), {\n        shallow: true\n      });\n      setSlide(slideCount);\n    }\n\n    return /*#__PURE__*/_jsx(Slide, {\n      children: generatedSlides[currentSlide]\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Swipeable, {\n    onSwipedLeft: swipeLeft,\n    onSwipedRight: swipeRight,\n    children: [/*#__PURE__*/_jsx(GlobalStyle, {}), /*#__PURE__*/_jsx(Storage, {}), /*#__PURE__*/_jsx(PresentationMode, {\n      mode: mode,\n      notes: slideNotes(),\n      currentSlide: currentSlide,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        id: \"slide\",\n        style: {\n          width: '100%'\n        },\n        children: renderSlide()\n      })\n    })]\n  });\n};\n\nexport default SlidePage;","map":null,"metadata":{},"sourceType":"module"}