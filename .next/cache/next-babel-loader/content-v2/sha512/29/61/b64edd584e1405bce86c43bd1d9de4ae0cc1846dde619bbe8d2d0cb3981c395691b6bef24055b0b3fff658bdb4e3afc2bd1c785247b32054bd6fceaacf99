{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abellisario/code/a11y-presentation/pages/slides/[slide].js\";\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Header from '../../components/Header';\nimport { TotalPagesContext } from '../../context/TotalPagesContext';\nimport { siteConfig } from '../../site.config.js';\n\nconst SlideshowPage = ({\n  totalSlidePages,\n  currentSlide,\n  filename\n}) => {\n  const MDXContent = dynamic(() => import(`../../${filename}`), {\n    loadableGenerated: {\n      webpack: () => [require.resolveWeak(`../../${filename}`)],\n      modules: [`../../${filename}`]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(TotalPagesContext.Provider, {\n    value: totalSlidePages,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [siteConfig.name, \" - \", siteConfig.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Poppins:wght@800&family=Roboto:ital,wght@0,400;0,700;1,400&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: siteConfig.name,\n      title: siteConfig.title,\n      date: siteConfig.date,\n      url: siteConfig.author.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDXContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  const filename = path.join('slides', `${params.slide}.mdx`);\n  const slidesDirectory = path.join(process.cwd(), 'slides');\n  const mdxFiles = fs.readdirSync(slidesDirectory);\n  const totalSlidePages = mdxFiles.length;\n  return {\n    props: {\n      totalSlidePages,\n      currentSlide: params.slide,\n      filename\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const postsDirectory = path.join(process.cwd(), 'slides');\n  const mdxFiles = fs.readdirSync(postsDirectory); // Loop through all post files and create array of slugs (to create links)\n\n  const paths = mdxFiles.map(filename => ({\n    params: {\n      slide: filename.replace('.mdx', '')\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default SlideshowPage;","map":{"version":3,"sources":["/Users/abellisario/code/a11y-presentation/pages/slides/[slide].js"],"names":["fs","path","Head","dynamic","Header","TotalPagesContext","siteConfig","SlideshowPage","totalSlidePages","currentSlide","filename","MDXContent","name","title","date","author","url","getStaticProps","params","join","slide","slidesDirectory","process","cwd","mdxFiles","readdirSync","length","props","getStaticPaths","postsDirectory","paths","map","replace","fallback"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,YAAnB;AAAiCC,EAAAA;AAAjC,CAAD,KAAiD;AACrE,QAAMC,UAAU,GAAGR,OAAO,CAAC,MAAM,OAAQ,SAAQO,QAAS,EAAzB,CAAP;AAAA;AAAA,0CAAe,SAAQA,QAAS,EAAhC;AAAA,gBAAe,SAAQA,QAAS,EAAhC;AAAA;AAAA,IAA1B;AACA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEF,eAAnC;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,mBACGF,UAAU,CAACM,IADd,SACuBN,UAAU,CAACO,KADlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,IAAI,EAAC,kHADP;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEP,UAAU,CAACM,IADnB;AAEE,MAAA,KAAK,EAAEN,UAAU,CAACO,KAFpB;AAGE,MAAA,IAAI,EAAEP,UAAU,CAACQ,IAHnB;AAIE,MAAA,GAAG,EAAER,UAAU,CAACS,MAAX,CAAkBC;AAJzB;AAAA;AAAA;AAAA;AAAA,YAXF,eAiBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBD;;AAyBA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMR,QAAQ,GAAGT,IAAI,CAACkB,IAAL,CAAU,QAAV,EAAqB,GAAED,MAAM,CAACE,KAAM,MAApC,CAAjB;AACA,QAAMC,eAAe,GAAGpB,IAAI,CAACkB,IAAL,CAAUG,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAAxB;AACA,QAAMC,QAAQ,GAAGxB,EAAE,CAACyB,WAAH,CAAeJ,eAAf,CAAjB;AACA,QAAMb,eAAe,GAAGgB,QAAQ,CAACE,MAAjC;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLnB,MAAAA,eADK;AAELC,MAAAA,YAAY,EAAES,MAAM,CAACE,KAFhB;AAGLV,MAAAA;AAHK;AADF,GAAP;AAOD;AAED,OAAO,eAAekB,cAAf,GAAgC;AACrC,QAAMC,cAAc,GAAG5B,IAAI,CAACkB,IAAL,CAAUG,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAAvB;AACA,QAAMC,QAAQ,GAAGxB,EAAE,CAACyB,WAAH,CAAeI,cAAf,CAAjB,CAFqC,CAGrC;;AACA,QAAMC,KAAK,GAAGN,QAAQ,CAACO,GAAT,CAAcrB,QAAD,KAAe;AACxCQ,IAAAA,MAAM,EAAE;AACNE,MAAAA,KAAK,EAAEV,QAAQ,CAACsB,OAAT,CAAiB,MAAjB,EAAyB,EAAzB;AADD;AADgC,GAAf,CAAb,CAAd;AAMA,SAAO;AACLF,IAAAA,KADK;AAELG,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,eAAe1B,aAAf","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport Head from 'next/head'\nimport dynamic from 'next/dynamic'\nimport Header from '../../components/Header'\nimport { TotalPagesContext } from '../../context/TotalPagesContext'\nimport { siteConfig } from '../../site.config.js'\n\nconst SlideshowPage = ({ totalSlidePages, currentSlide, filename }) => {\n  const MDXContent = dynamic(() => import(`../../${filename}`))\n  return (\n    <TotalPagesContext.Provider value={totalSlidePages}>\n      <Head>\n        <title>\n          {siteConfig.name} - {siteConfig.title}\n        </title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@800&family=Roboto:ital,wght@0,400;0,700;1,400&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <Header\n        name={siteConfig.name}\n        title={siteConfig.title}\n        date={siteConfig.date}\n        url={siteConfig.author.url}\n      />\n      <MDXContent />\n    </TotalPagesContext.Provider>\n  )\n}\n\nexport async function getStaticProps({ params }) {\n  const filename = path.join('slides', `${params.slide}.mdx`)\n  const slidesDirectory = path.join(process.cwd(), 'slides')\n  const mdxFiles = fs.readdirSync(slidesDirectory)\n  const totalSlidePages = mdxFiles.length\n\n  return {\n    props: {\n      totalSlidePages,\n      currentSlide: params.slide,\n      filename,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const postsDirectory = path.join(process.cwd(), 'slides')\n  const mdxFiles = fs.readdirSync(postsDirectory)\n  // Loop through all post files and create array of slugs (to create links)\n  const paths = mdxFiles.map((filename) => ({\n    params: {\n      slide: filename.replace('.mdx', ''),\n    },\n  }))\n\n  return {\n    paths,\n    fallback: false,\n  }\n}\n\nexport default SlideshowPage\n"]},"metadata":{},"sourceType":"module"}