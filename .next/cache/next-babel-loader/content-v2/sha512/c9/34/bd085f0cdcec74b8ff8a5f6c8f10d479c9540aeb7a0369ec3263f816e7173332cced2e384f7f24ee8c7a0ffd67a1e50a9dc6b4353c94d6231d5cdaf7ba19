{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abellisario/code/a11y-presentation/components/MDXProvider.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport okaidia from 'react-syntax-highlighter/dist/cjs/styles/prism/okaidia';\nimport SlidePage from '../layouts/SlidePage';\nimport Cover from './Cover';\nimport SpeakerNotes from './SpeakerNotes';\nconst mdComponents = {\n  h1: props => /*#__PURE__*/_jsxDEV(\"h1\", _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 18\n  }, this),\n  pre: props => props.children,\n  code: props => {\n    const {\n      className\n    } = props;\n    const language = className.replace('language-', '');\n    return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, _objectSpread({\n      className: className,\n      language: language,\n      style: okaidia\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  },\n  Cover,\n  SlidePage,\n  SpeakerNotes\n};\nexport default (({\n  children\n}) => /*#__PURE__*/_jsxDEV(MDXProvider, {\n  components: mdComponents,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["/Users/abellisario/code/a11y-presentation/components/MDXProvider.jsx"],"names":["React","MDXProvider","Prism","SyntaxHighlighter","okaidia","SlidePage","Cover","SpeakerNotes","mdComponents","h1","props","pre","children","code","className","language","replace"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,OAAOC,OAAP,MAAoB,wDAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAGC,KAAD,iBAAW,gCAAQA,KAAR;AAAA;AAAA;AAAA;AAAA,UADI;AAEnBC,EAAAA,GAAG,EAAGD,KAAD,IAAWA,KAAK,CAACE,QAFH;AAGnBC,EAAAA,IAAI,EAAGH,KAAD,IAAW;AACf,UAAM;AAAEI,MAAAA;AAAF,QAAgBJ,KAAtB;AACA,UAAMK,QAAQ,GAAGD,SAAS,CAACE,OAAV,CAAkB,WAAlB,EAA+B,EAA/B,CAAjB;AACA,wBACE,QAAC,iBAAD;AACE,MAAA,SAAS,EAAEF,SADb;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,KAAK,EAAEX;AAHT,OAIMM,KAJN;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAdkB;AAenBJ,EAAAA,KAfmB;AAgBnBD,EAAAA,SAhBmB;AAiBnBE,EAAAA;AAjBmB,CAArB;AAoBA,gBAAe,CAAC;AAAEK,EAAAA;AAAF,CAAD,kBACb,QAAC,WAAD;AAAa,EAAA,UAAU,EAAEJ,YAAzB;AAAA,YAAwCI;AAAxC;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport okaidia from 'react-syntax-highlighter/dist/cjs/styles/prism/okaidia'\nimport SlidePage from '../layouts/SlidePage'\nimport Cover from './Cover'\nimport SpeakerNotes from './SpeakerNotes'\n\nconst mdComponents = {\n  h1: (props) => <h1 {...props} />,\n  pre: (props) => props.children,\n  code: (props) => {\n    const { className } = props\n    const language = className.replace('language-', '')\n    return (\n      <SyntaxHighlighter\n        className={className}\n        language={language}\n        style={okaidia}\n        {...props}\n      />\n    )\n  },\n  Cover,\n  SlidePage,\n  SpeakerNotes,\n}\n\nexport default ({ children }) => (\n  <MDXProvider components={mdComponents}>{children}</MDXProvider>\n)\n"]},"metadata":{},"sourceType":"module"}